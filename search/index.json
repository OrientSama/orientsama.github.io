[{"content":"起因 搞完博客之后，总觉得页面空荡荡的（没什么内容，不空才怪），然后又看到之前的UP主的博客页面又多了新东西，感觉挺好的，我就把它弄过来了。\n方法 首先，需要在你的site文件夹下新建文件layouts/_default/baseof.html，之后把themes/[your theme folder]/layouts/_default/baseof.html文件的内容拷贝过来。 之后找到\u0026lt;body\u0026gt;,在里面添加下面这段代码，[your-public-git-repertory](这是你的静态页面仓库的地址，比如我的是orientsama.github.io)，\n1 2 3 4 5 6 7 8 9 10 11 12 13 \u0026lt;body class=\u0026#34;{{ block `body-class` . }}{{ end }}\u0026#34;\u0026gt; \u0026lt;!--上面这句不用复制 --\u0026gt; \u0026lt;!-- add start --\u0026gt; \u0026lt;script src=\u0026#34;https://[your-public-git-repertory]/background/particles.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;link rel=\u0026#34;stylesheet\u0026#34; href=\u0026#34;https://[your-public-git-repertory]/background/style.css\u0026#34;\u0026gt; \u0026lt;div id=\u0026#34;particles-js\u0026#34;\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;script\u0026gt; particlesJS.load(\u0026#39;particles-js\u0026#39;, \u0026#34;https://[your-public-git-repertory]/background/particles_config.json\u0026#34;, function() { console.log(\u0026#39;particles.js loaded - callback\u0026#39;); }); \u0026lt;/script\u0026gt; \u0026lt;!-- add end --\u0026gt; 之后在static文件夹下建立background文件夹，放入三个文件。\n1 2 3 4 5 6 7 8 9 /* 文件名：style.css */ #particles-js { position: absolute; width: 100%; height: 100%; top: 0; left: 0; z-index: -1; } partcles.js 在这个仓库里下载\n1 2 // 文件名：partcles.js // 这个文件太长了，就不粘贴了。。。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 // 文件名：particles_config.json { \u0026#34;particles\u0026#34;: { \u0026#34;number\u0026#34;: { \u0026#34;value\u0026#34;: 120, \u0026#34;density\u0026#34;: { \u0026#34;enable\u0026#34;: true, \u0026#34;value_area\u0026#34;: 800 } }, \u0026#34;color\u0026#34;: { \u0026#34;value\u0026#34;: \u0026#34;#66ccff\u0026#34; }, \u0026#34;shape\u0026#34;: { \u0026#34;type\u0026#34;: \u0026#34;circle\u0026#34;, \u0026#34;stroke\u0026#34;: { \u0026#34;width\u0026#34;: 0, \u0026#34;color\u0026#34;: \u0026#34;#000000\u0026#34; }, \u0026#34;polygon\u0026#34;: { \u0026#34;nb_sides\u0026#34;: 5 }, \u0026#34;image\u0026#34;: { \u0026#34;src\u0026#34;: \u0026#34;img/github.svg\u0026#34;, \u0026#34;width\u0026#34;: 100, \u0026#34;height\u0026#34;: 100 } }, \u0026#34;opacity\u0026#34;: { \u0026#34;value\u0026#34;: 0.5, \u0026#34;random\u0026#34;: false, \u0026#34;anim\u0026#34;: { \u0026#34;enable\u0026#34;: false, \u0026#34;speed\u0026#34;: 1, \u0026#34;opacity_min\u0026#34;: 0.1, \u0026#34;sync\u0026#34;: false } }, \u0026#34;size\u0026#34;: { \u0026#34;value\u0026#34;: 4, \u0026#34;random\u0026#34;: true, \u0026#34;anim\u0026#34;: { \u0026#34;enable\u0026#34;: false, \u0026#34;speed\u0026#34;: 40, \u0026#34;size_min\u0026#34;: 0.1, \u0026#34;sync\u0026#34;: false } }, \u0026#34;line_linked\u0026#34;: { \u0026#34;enable\u0026#34;: true, \u0026#34;distance\u0026#34;: 80, \u0026#34;color\u0026#34;: \u0026#34;#66ccff\u0026#34;, \u0026#34;opacity\u0026#34;: 0.4, \u0026#34;width\u0026#34;: 1 }, \u0026#34;move\u0026#34;: { \u0026#34;enable\u0026#34;: true, \u0026#34;speed\u0026#34;: 3, \u0026#34;direction\u0026#34;: \u0026#34;none\u0026#34;, \u0026#34;random\u0026#34;: true, \u0026#34;straight\u0026#34;: false, \u0026#34;out_mode\u0026#34;: \u0026#34;out\u0026#34;, \u0026#34;bounce\u0026#34;: false, \u0026#34;attract\u0026#34;: { \u0026#34;enable\u0026#34;: false, \u0026#34;rotateX\u0026#34;: 600, \u0026#34;rotateY\u0026#34;: 1200 } } }, \u0026#34;interactivity\u0026#34;: { \u0026#34;detect_on\u0026#34;: \u0026#34;window\u0026#34;, \u0026#34;events\u0026#34;: { \u0026#34;onhover\u0026#34;: { \u0026#34;enable\u0026#34;: true, \u0026#34;mode\u0026#34;: \u0026#34;grab\u0026#34; }, \u0026#34;onclick\u0026#34;: { \u0026#34;enable\u0026#34;: true, \u0026#34;mode\u0026#34;: \u0026#34;repulse\u0026#34; }, \u0026#34;resize\u0026#34;: true }, \u0026#34;modes\u0026#34;: { \u0026#34;grab\u0026#34;: { \u0026#34;distance\u0026#34;: 200, \u0026#34;line_linked\u0026#34;: { \u0026#34;opacity\u0026#34;: 1 } }, \u0026#34;bubble\u0026#34;: { \u0026#34;distance\u0026#34;: 400, \u0026#34;size\u0026#34;: 40, \u0026#34;duration\u0026#34;: 2, \u0026#34;opacity\u0026#34;: 8, \u0026#34;speed\u0026#34;: 3 }, \u0026#34;repulse\u0026#34;: { \u0026#34;distance\u0026#34;: 250, \u0026#34;duration\u0026#34;: 0.4 }, \u0026#34;push\u0026#34;: { \u0026#34;particles_nb\u0026#34;: 4 }, \u0026#34;remove\u0026#34;: { \u0026#34;particles_nb\u0026#34;: 2 } } }, \u0026#34;retina_detect\u0026#34;: true } particles_config.json是配置文件，你可以自己在这个网站自己调整，上面那个是我copyUP主的。\n结语 折腾了不少时间，原因很多，粗心大意是一方面，另一方面是对hugo的框架了解的不深，只能说道阻且长。\n","date":"2024-09-21T15:31:34+08:00","image":"https://orientsama.github.io/p/particles/particles_hu18371721016363736066.png","permalink":"https://orientsama.github.io/p/particles/","title":"为博客添加动态粒子效果"},{"content":"起因 主要还是夜里睡不着觉，然后在B站上看到了一条短视频，大致内容是关于程序员写技术博客的好处有哪些。吓，我也算是程序员，还没写过技术博客，怪不得水平那么低。于是乎，我就开始寻找搭建博客的教程。\n过程 开始搜索如何搭建博客，搭博客一般来说都需要整个服务器，但是我没有，所以就找一些免费的博客。很快就搜到了一个这样一个视频——Hugo + Github免费搭建博客，并实现自动化部署，因为当时还是在深夜，不能打扰室友休息，所以我只是看视频，大致学一下流程。总体视频看下来，没有什么难度。看完便睡了，第二天下午开始动手搭建。\n原本以为整个流程没有什么困难的，直到最后一步自动化部署。我当时在搭建过程中也不是全按照视频来做的，首先git clone HUGO仓库然后点进官方文档中，按照官方文档把主题添加到了git submodule……\n1 2 3 4 5 6 hugo new site quickstart cd quickstart git init git submodule add https://github.com/theNewDynamic/gohugo-theme-ananke.git themes/ananke echo \u0026#34;theme = \u0026#39;ananke\u0026#39;\u0026#34; \u0026gt;\u0026gt; hugo.toml hugo server 就是以上的代码，修改掉应该修改的地方。 可以说前面的进展十分顺利，直到最后，要实现那个git update自动更新网页，出了问题。网页没有html,只有那种古老的xml，蓝色字体，毫无排版，丑的一。 没办法，无奈只能找原因。\n提示找不到html格式的布局文件，但是我本地运行没有任何问题。然后就是各种找原因，中间各种细节就不提了，最后发现，就是因为我的主题使用的git submodule add添加进去的，而不是像视频中直接下载的压缩包解压。\n把这个步骤解决之后，再次提交，自动部署成功了。\n结果 现在的问题是，博客搭好了，我应该写什么东西呢？这真是一个大问题。\n","date":"2024-09-21T09:09:14+08:00","image":"https://orientsama.github.io/p/first_blog/hugo_logo_hu10817293329037133618.jpeg","permalink":"https://orientsama.github.io/p/first_blog/","title":"第一篇博客"},{"content":"This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\nHeadings The following HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nBlockquotes The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\nBlockquote without attribution Tiam, ad mint andaepu dandae nostion secatur sequo quae. Note that you can use Markdown syntax within a blockquote.\nBlockquote with attribution Don\u0026rsquo;t communicate by sharing memory, share memory by communicating.\n— Rob Pike1\nTables Tables aren\u0026rsquo;t part of the core Markdown spec, but Hugo supports supports them out-of-the-box.\nName Age Bob 27 Alice 23 Inline Markdown within tables Italics Bold Code italics bold code A B C D E F Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus ultricies, sapien non euismod aliquam, dui ligula tincidunt odio, at accumsan nulla sapien eget ex. Proin eleifend dictum ipsum, non euismod ipsum pulvinar et. Vivamus sollicitudin, quam in pulvinar aliquam, metus elit pretium purus Proin sit amet velit nec enim imperdiet vehicula. Ut bibendum vestibulum quam, eu egestas turpis gravida nec Sed scelerisque nec turpis vel viverra. Vivamus vitae pretium sapien Code Blocks Code block with backticks 1 2 3 4 5 6 7 8 9 10 \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block indented with four spaces \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;utf-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block with Hugo\u0026rsquo;s internal highlight shortcode 1 2 3 4 5 6 7 8 9 10 \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Diff code block 1 2 3 4 5 [dependencies.bevy] git = \u0026#34;https://github.com/bevyengine/bevy\u0026#34; rev = \u0026#34;11f52b8c72fc3a568e8bb4a4cd1f3eb025ac2e13\u0026#34; - features = [\u0026#34;dynamic\u0026#34;] + features = [\u0026#34;jpeg\u0026#34;, \u0026#34;dynamic\u0026#34;] List Types Ordered List First item Second item Third item Unordered List List item Another item And another item Nested list Fruit Apple Orange Banana Dairy Milk Cheese Other Elements — abbr, sub, sup, kbd, mark GIF is a bitmap image format.\nH2O\nXn + Yn = Zn\nPress CTRL + ALT + Delete to end the session.\nMost salamanders are nocturnal, and hunt for insects, worms, and other small creatures.\nHyperlinked image The above quote is excerpted from Rob Pike\u0026rsquo;s talk during Gopherfest, November 18, 2015.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"2019-03-11T00:00:00Z","image":"https://orientsama.github.io/p/markdown-syntax-guide/pawel-czerwinski-8uZPynIu-rQ-unsplash_hu6307248181568134095.jpg","permalink":"https://orientsama.github.io/p/markdown-syntax-guide/","title":"Markdown Syntax Guide"},{"content":"Mathematical notation in a Hugo project can be enabled by using third party JavaScript libraries.\nIn this example we will be using KaTeX\nCreate a partial under /layouts/partials/math.html Within this partial reference the Auto-render Extension or host these scripts locally. Include the partial in your templates like so: 1 2 3 {{ if or .Params.math .Site.Params.math }} {{ partial \u0026#34;math.html\u0026#34; . }} {{ end }} To enable KaTeX globally set the parameter math to true in a project\u0026rsquo;s configuration To enable KaTeX on a per page basis include the parameter math: true in content files Note: Use the online reference of Supported TeX Functions\nExamples Inline math: $\\varphi = \\dfrac{1+\\sqrt5}{2}= 1.6180339887…$\nBlock math: $$ \\varphi = 1+\\frac{1} {1+\\frac{1} {1+\\frac{1} {1+\\cdots} } } $$","date":"2019-03-08T00:00:00Z","permalink":"https://orientsama.github.io/p/math-typesetting/","title":"Math Typesetting"},{"content":"Emoji can be enabled in a Hugo project in a number of ways.\nThe emojify function can be called directly in templates or Inline Shortcodes.\nTo enable emoji globally, set enableEmoji to true in your site\u0026rsquo;s configuration and then you can type emoji shorthand codes directly in content files; e.g.\n🙈 :see_no_evil: 🙉 :hear_no_evil: 🙊 :speak_no_evil:\nThe Emoji cheat sheet is a useful reference for emoji shorthand codes.\nN.B. The above steps enable Unicode Standard emoji characters and sequences in Hugo, however the rendering of these glyphs depends on the browser and the platform. To style the emoji you can either use a third party emoji font or a font stack; e.g.\n1 2 3 .emoji { font-family: Apple Color Emoji, Segoe UI Emoji, NotoColorEmoji, Segoe UI Symbol, Android Emoji, EmojiSymbols; } ","date":"2019-03-05T00:00:00Z","image":"https://orientsama.github.io/p/emoji-support/the-creative-exchange-d2zvqp3fpro-unsplash_hu5876398126655421130.jpg","permalink":"https://orientsama.github.io/p/emoji-support/","title":"Emoji Support"}]